{"pageProps":{"markdoc":{"content":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Components of any type can specify the endpoints that the container exposes. These endpoints can be made accessible to the users if the {prod-short} cluster is running using a Kubernetes ingress or an OpenShift route and to the other components within the workspace. You can create an endpoint for your application or database, if your application or database server is listening on a port and you want to be able to directly interact with it yourself or you want other components to interact with it."]},{"$$mdtype":"Tag","name":"h2","attributes":{"id":"procedure"},"children":["Procedure"]},{"$$mdtype":"Tag","name":"ol","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Specify endpoints properties as shown in the following example:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"language":"yaml","title":"Specify endpoints properties","filename":"devfile.yaml"},"children":["schemaVersion: 2.0.0\nmetadata:\n  name: MyDevfile\nprojects:\n  - name: my-go-project\n    clonePath: go/src/github.com/acme/my-go-project\n    git:\n      remotes:\n        origin: \"https://github.com/acme/my-go-project.git\"\ncomponents:\n  - name: go\n    container:\n      image: golang\n      memoryLimit: 512Mi\n      mountSources: true\n      command: ['sleep', 'infinity']\n      env:\n        - name: GOPATH\n          value: $(PROJECTS_ROOT)/go\n        - name: GOCACHE\n          value: /tmp/go-cache\n      endpoints:\n      - name: web\n        targetPort: 8080\n        exposure: public\n        protocol: http\n  - name: postgres\n    container:\n      image: postgres\n      memoryLimit: 512Mi\n      env:\n        - name: POSTGRES_USER\n          value: user\n        - name: POSTGRES_PASSWORD\n          value: password\n        - name: POSTGRES_DB\n          value: database\n      endpoints:\n        - name: postgres\n          targetPort: 5432\n          configuration:\n            discoverable: true\n            public: false\n"]}]}]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Here, there are two container, each defining a single endpoint. Endpoint"," ","is an accessible port that can be made accessible inside the workspace"," ","or publicly (example, from the UI). Each endpoint has a name and port,"," ","which is the port on which certain server running inside the container"," ","is listening. The following are a few attributes that you can set on the"," ","endpoint:"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["exposure"]},": When its value is ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["public"]},", the endpoint is accessible"," ","outside the workspace. Users can access such an endpoint from the"," ","devfile user interface, and the endpoint is always exposed on port"," ","80 or 443 depending on whether TLS is enabled in the devfile."]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["protocol"]},": For public endpoints the protocol is a hint to the UI on"," ","how to construct the URL for the endpoint access. Typical values are"," ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["http"]},", ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["https"]},", ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["ws"]},", ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["wss"]},"."]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["secure"]},": A boolean (defaulting to ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["false"]},") specifying whether the"," ","endpoint is put behind a JWT proxy requiring a JWT workspace token"," ","to grant access. The JWT proxy is deployed in the same Pod as the"," ","server and assumes the server listens solely on the local loopback"," ","interface, such as ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["127.0.0.1"]},"."]},{"$$mdtype":"Tag","name":"Callout","attributes":{"title":"Warning!","type":"warning"},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Listening on any other interface than the local loopback poses a"," ","security risk because such server is accessible without the JWT"," ","authentication within the cluster network on the corresponding IP"," ","addresses."]}]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"code","attributes":{},"children":["path"]},": The URL of the endpoint."]}]}]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["When starting a new server within a component, {prod-short} autodetects this, and the UI offers to automatically expose this port as a ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["public"]}," port. This is useful for debugging a web application, for example. It is impossible to do this for servers that autostart with the container (for example, a database server). For such components, specify the endpoints explicitly."]},{"$$mdtype":"Tag","name":"p","attributes":{},"children":["Example specifying endpoints for ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["kubernetes"]},"/",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["openshift"]}," and ",{"$$mdtype":"Tag","name":"code","attributes":{},"children":["plugin"]}," ","types:"]},{"$$mdtype":"Tag","name":"Fence","attributes":{"language":"yaml","filename":"devfile.yaml"},"children":["schemaVersion: 2.0.0\nmetadata:\n  name: MyDevfile\ncomponents:\n  - name: theia-editor\n    plugin:\n      id: eclipse/che-theia/next\n      endpoints:\n      - name: 'theia-extra-endpoint'\n        targetPort: 8880\n        exposure: public\n  - plugin:\n      id: redhat/php/latest\n      memoryLimit: 1Gi\n      endpoints:\n      - name: 'php-endpoint'\n        targetPort: 7777\n  - plugin:\n      name: theia-editor\n      id: eclipse/che-theia/next\n      endpoints:\n      - name: 'theia-extra-endpoint'\n        targetPort: 8880\n        exposure: public\n  - openshift:\n      name: webapp\n      reference: webapp.yaml\n      endpoints:\n      - name: 'web'\n        targetPort: 8080\n        exposure: public\n        protocol: http\n  - openshift:\n      name: mongo\n      reference: mongo-db.yaml\n      endpoints:\n      - name: 'mongo-db'\n        targetPort: 27017\n        exposure: public\n"]},{"$$mdtype":"Tag","name":"h2","attributes":{"id":"additional-resources"},"children":["Additional resources"]},{"$$mdtype":"Tag","name":"ul","attributes":{},"children":[{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"./devfile-schema"},"children":["API reference"]}]}]},{"$$mdtype":"Tag","name":"li","attributes":{},"children":[{"$$mdtype":"Tag","name":"p","attributes":{},"children":[{"$$mdtype":"Tag","name":"Link","attributes":{"href":"./devfile-samples"},"children":["Devfile samples"]}]}]}]}],"frontmatter":{"title":"Defining endpoints","description":"Defining endpoints"},"file":{"path":"/docs/2.0.0/defining-endpoints.md"}}},"__N_SSG":true}